install.packages("jsonlite")
library(jsonlite)
ine.url->"https://servicios.ine.es/wstempus/js/ES/DATOS_TABLA/2852?nult=5&tip=AM"
ine.url<-"https://servicios.ine.es/wstempus/js/ES/DATOS_TABLA/2852?nult=5&tip=AM"
pob.esp <- fromJSON(ine.url)
pob.esp <- fromJSON(ine.url)
pob.esp <- fromJSON(ine.url)
float.url<-"https://www.floatrates.com/daily/usd.json"
daily.usd <- fromJSON(ine.url)
library(jsonlite)
float.JSON<-"students.json"
studentsjson<-fromJSON(float.JSON)
float.JSON<-"C:\Users\jair_\Desktop\Jair\UPC\CICLO 5\Data Science\TA\students.json"
float.JSON<-"\Data Science\TA\students.json"
float.JSON<-"students.json"
studentsjson<-fromJSON(float.JSON)
ruta_json<-"students.json"
delete.response("float.JSON")
delete("float.JSON")
datos_json<-fromJSON(file = ruta_json)
datos_json<-fromJSON(file = ruta_json)
datos_json<-fromJSON(file.access("students.json")) = ruta_json)
datos_json<-fromJSON(file.access("students.json"))
ruta_json<-"TA/students.json"
datos_json<-fromJSON(file = ruta_json)
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
ruta_json<-"students.json"
datos_json<-fromJSON(file = ruta_json)
datos_json<-fromJSON(file = ruta_json)
datos_json<-fromJSON(file = ruta_json)
daily.usd <- fromJSON(ine.url)
ruta.json<-"students.json"
datos_json<-fromJSON(file = ruta.json)
students <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/students.json", sep="")
students <- read.delim("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/students.json", row.names=1)
library(readr)
students <- read_csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/students.json")
View(students)
students <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/students.json", row.names=NULL, sep=";", quote="'")
View(students)
datos_json<-fromJSON(file = ruta.json)
ruta.json<-"students.json"
ruta.json<'students.json'
ruta__json<'students.json'
ruta_json<'students.json'
datos_json<-fromJSON(file = ruta_json)
ruta_json<"students.json"
datos_json<-fromJSON(file = ruta_json)
rm("ruta_json")
rm("ruta.json")
rm("float.json")
rm("float.JSON")
rm("students")
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
ruta_json<"students.json"
ruta_json<-"students.json"
datos_json<-fromJSON(file = ruta_json)
datos.json<-fromJSON(file = ruta_json)
datos_json <- fromJSON(txt = readLines(ruta_json))
ruta_json<-"C:\Users\jair_\Desktop\Jair\UPC\CICLO 5\Data Science\TA\students.json"
ruta_json<-"C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/students.json"
datos_json <- fromJSON(txt = readLines(ruta_json))
datos_json <- fromJSON(file = ruta_json)
datos_json <- fromJSON(file = ruta_json)
ruta.json<-"students.json"
datos_json <- fromJSON(txt = readLines(ruta.json))
datos_json <- fromJSON(file = ruta.json)
datos_json <- fromJSON(ruta.json)
datos_json <- fromJSON("ruta.json")
datos_json <- fromJSON(file = "ruta.json")
datos_json <- fromJSON(file = "ruta.json")
library(jsonlite)
datos_json <- fromJSON(file = "ruta.json")
datos_json <- fromJSON("students.json")
datos_json <- fromJSON(students.json)
datos_json <- fromJSON("students.json")
datos_json <- fromJSON(file = ruta.json)
ruta_json<-"students.json"
datos_json <- fromJSON(file = ruta_json)
rm("ruta.json")
View(datos_json)
rutastudents_json <-"students-courses.json"
datosrutas_json <- fromJSON(file = datos_json)
datos_json <- fromJSON("ruta_json")
student.courses <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/student-courses.json", header=FALSE)
View(student.courses)
install.packages("XML")
library(XML)
bm.url <-
"http://api.worldbank.org/v2/countries/all/indicators/NY.GDP.MKTP.CD?date=2019:2020&per_
page=500&page=1"
bm.doc <- xmlParse(bm.url)
root.node <- xmlRoot(bm.doc)
root.node[1]
bm.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
View(bm.data)
bm.datos <- data.frame(t(bm.data), row.names = NULL)
View(bm.data)
View(bm.datos)
bm.url <-"cd_catalog.xml"
cd.url <-"cd_catalog.xml"
rm("bm.url")
bm.url <-
"http://api.worldbank.org/v2/countries/all/indicators/NY.GDP.MKTP.CD?date=2019:2020&per_
page=500&page=1"
cd.url <-"cd_catalog.xml"
cd.doc<-xmlParse(cd.url)
cd.doc<-xmlTreeParse(cd.url)
cd.url <-"C:\Users\jair_\Desktop\Jair\UPC\CICLO 5\Data Science\TA\cd_catalog.xml"
cd.doc<-xmlTreeParse(cd.url)
cd.url <-"C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/cd_catalog.xml"
cd.doc<-xmlTreeParse(cd.url)
rutastudents_json <-"C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/students-courses.json"
datos_json <- fromJSON(file = ruta_json)
datos_json <- fromJSON(file = ruta_json)
datos_json <- fromJSON(file = ruta_json)
cd.doc<-xmlTreeParse(cd.url)
cd.doc<-xmlParse(cd.url)
root.node <- xmlRoot(bm.doc)
root.node[1]
bm.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
bm.datos <- data.frame(t(bm.data), row.names = NULL)
cd.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
cd.datos <- data.frame(t(bm.data), row.names = NULL)
bm.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
bm.datos <- data.frame(t(bm.data), row.names = NULL)
auto <- read.csv("data/auto-mpg.csv", header = TRUE, sep = ",")
auto <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/data/auto-mpg.csv", header = TRUE, sep = ",")
auto <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/auto-mpg.csv", header = TRUE, sep = ",")
names(auto)
wpob.url <- "C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/WorldPopulation-wiki.html"
tablas <- readHTMLTable(wpob.url)
most_wpob <- tablas[[5]]
tabla_unica <- readHTMLTable(wpob.url, which = 5)
wpob.url <- "C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/WorldPopulation-wiki.html"
tablas <- readHTMLTable(wpob.url)
library(XML)
tablas <- readHTMLTable(wpob.url)
most_wpob <- tablas[[5]]
head(most_wpob,3)
tabla_unica <- readHTMLTable(wpob.url, which = 5)
familia.salario <- c(40000,60000,50000, 80000, 60000, 70000, 60000)
familia.integrantes <- c(4,3,2,2,3,4,3)
familia.auto <- c("Lujo", "Compacto", "SUV", "Lujo", "Compacto", "Compac
to", "Compacto")
familia <- data.frame(familia.salario, familia.integrantes, familia.auto
)
View(familia)
duplicated(familia)
familia[duplicated(familia),]
unique(familia)
familias.unicas <- unique(familia)
familias.unicas <- unique(familia)
View(familias.unicas)
setwd("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7")
install.packages("scales")
library(scales)
estudiantes <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/data-conversion.csv")
View(estudiantes)
estudiantes$Income.rescaled <- rescale(estudiantes$Income)
View(estudiantes)
(estudiantes$Income - min(estudiantes$Income)) / (max(estudiantes$Income
)- min(estudiantes$Income))
rescale(estudiantes$Income, to = c(0,100))
rescalar.cols <- function(df, cols){
+ nombres <- names(df)
+ for (col in cols){
+ nombre <- paste(nombres[col], 'rescaled', sep = '.')
+ df[nombre] <- rescale(df[,col])
+ }
rescalar.cols <- function(df, cols){
+ nombres <- names(df)
+ for (col in cols){
+ nombre <- paste(nombres[col], 'rescaled', sep = '.')
+ df[nombre] <- rescale(df[,col])
}
+ cat(paste("Hemos reescalado ", length(cols), " variable(s)"))
+ df
}
rescalar.cols <- function(df, cols){
+ nombres <- names(df)
+ for (col in cols){
+ nombre <- paste(nombres[col], 'rescaled', sep = '.')
+ df[nombre] <- rescale(df[,col])
}
+ cat(paste("Hemos reescalado ", length(cols), " variable(s)"))
+ df
}
estudiantes <- rescalar.cols(estudiantes, c(1,4))
rescalar.cols <- function(df, cols){
nombres <- names(df)
for (col in cols){
nombre <- paste(nombres[col], 'rescaled', sep = '.')
df[nombre] <- scales::rescale(df[,col])
}
cat(paste("Hemos reescalado ", length(cols), " variable(s)"))
return(df)
}
estudiantes <- rescalar.cols(estudiantes, c(1,4))
view(estudiantes)
View(estudiantes)
casas <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/BostonHousing.csv")
casas <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/BostonHousing.csv")
View(casas)
casas.z <- scale(casas)
View(casas.z)
casas.mean <- scale(casas, center = TRUE, scale = FALSE)
View(casas.mean)
casas.sd <- scale(casas, center = FALSE, scale = TRUE)
view(casas.sd)
View(casas.sd)
normalizar.cols <- function(df, cols){
+ nombres <- names(df)
+ for (col in cols){
+ nombre <- paste(nombres[col], "z", sep = ".")
+ df[nombre]<- scale(df[,col])
}
+ cat(paste("Hemos normalizado ", length(cols), " variable(s)"))
+ df
}
casas <- normalizar.cols(casas, c(1,3,5:8))
normalizar.cols <- function(df, cols) {
nombres <- names(df)
for (col in cols) {
nombre <- paste(nombres[col], "z", sep = ".")
df[nombre] <- scale(df[, col])
}
cat(paste("Hemos normalizado ", length(cols), " variable(s)"))
return(df)
}
view(casas)
View(casas)
casas <- normalizar.cols(casas, c(1,3,5:8))
View(casas)
setwd("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7")
estudiantes <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/data-conversion.csv")
niveles <- c(-Inf, 10000, 31000, Inf)
nom.nivel <- c('Bajo', 'Medio', 'Alto')
estudiantes$Income.cat <- cut(estudiantes$Income, breaks = niveles, labels = n
om.nivel)
estudiantes$Income.cat <- cut(estudiantes$Income, breaks = niveles, labels = nom.nivel)
str(estudiantes)
> estudiantes$Income.cat2 <- cut(estudiantes$Income,
estudiantes$Income.cat2 <- cut(estudiantes$Income,
4
+ breaks = 4,labels = c("Nivel 1", "Nivel 2", "Ni
estudiantes$Income.cat2 <- cut(estudiantes$Income,
breaks = 4,
labels = c("Nivel 1", "Nivel 2", "Nivel 3", "Nivel 4"))
view(estudiantes)
View(estudiantes)
#Variables ficticias
estudiantes <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/data-conversion.csv")
install.packages("dummies")
library(dummies)
estudiantes.dummy <- dummy.data.frame(estudiantes, sep = ".")
View(estudiantes.dummy)
dummy(estudiantes$State, sep=".")
dummy.data.frame(estudiantes, names = c("State"), sep =".")
dummy.data.frame(estudiantes, names = c("State", "Gender"), sep =".")
ozone.data <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/ozone.csv", stringsAsFactors = FALSE)
ozone.data <- read.csv("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/ozone.csv", stringsAsFactors = FALSE)
view(ozone.data)
View(ozone.data)
outliers.values <- boxplot(ozone.data$pressure_height)$out
outliers.values
summary(ozone.data$pressure_height)
boxplot(ozone.data$pressure_height,
+ main = "Pressure Heigh",
boxplot(ozone.data$pressure_height,
main = "Pressure Height",
boxwex = 0.5)
boxplot(ozone$pressure_height ~ ozone$Month,
main = "Pressure Height by Month",
xlab = "Month",
ylab = "Pressure Height")
boxplot(ozone$pressure_height ~ ozone$Month,
main = "Pressure Height by Month",
xlab = "Month",
ylab = "Pressure Height")
boxplot(pressure_height ~ Month, data = ozone)
boxplot(pressure_height ~ Month, data = ozone.data,
main = "Pressure Height per Month")
boxplot(ozone_reading ~ Month, data = ozone.data,
main = "Ozone reading per Month")
boxplot(ozone_reading ~ Month, data = ozone.data,
main = "Ozone reading per Month")$out)
boxplot(ozone_reading ~ Month, data = ozone.data,
main = "Ozone reading per Month")$out
fix_outliers <- function(x, removeNA = TRUE){
#Calculamos los quantiles 1) por arriba del 5% y por debajo del 95%
9
quantiles <- quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- mean(x, na.rm = removeNA)
x[x>quantiles[2]] <- median(x, na.rm = removeNA)
x
}
sin.outliers <- fix_outliers(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Presión sin Outliers")
boxplot(fix_outliers(ozone.data$pressure_height), main = "Presión sin Outliers
")
replace_outliers <- function(x, removeNA = TRUE){
qrts <- quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
# si el outlier esta por debajo del cuartil 0.5 o por arriba de 0.95
caps <- quantile(x, probs = c(.05, .95), na.rm = removeNA)
# Calculamos el rango intercuartilico
iqr <- qrts[2]-qrts[1]
# Calculamos el 1.5 veces el rango intercuartiligo (iqr)
altura <- 1.5*iqr
#reemplazamos del vector los outliers por debajo de 0.05 y 0.095
10
x[x<qrts[1]-altura] <- caps[1]
x[x>qrts[2]+altura] <- caps[2]
x
}
par(mfrow = c(1,2))
boxplot(replace.outliers(ozone.data$pressure_height), main = "Presión sin Outl
iers")
boxplot(replace.outliers(ozone.data$pressure_height), main = "Presión sin Outliers")
boxplot(replace.outliers(ozone.data$pressure_height), main = "Presión sin Outliers")
boxplot(ozone.data$pressure_height, main = "Presión con Outliers")
boxplot(replace_outliers(ozone.data$pressure_height), main = "Presión sin Outl
iers")
clientes <- c("Arturo", "Bill", "Jack")
fechas <- c("2021-05-01", "2021-04-28", "2021-03-30")
pagos <- c(315.1, 205.4,450.2)
fechas <- as.Date(c("2021-05-01", "2021-04-28", "2021-03-30"))
pedidos <- data.frame(clientes, fechas, pagos)
View(pedidos)
save(pedidos, file = "../LAB7/pedidos.Rdata")
save(pedidos, file = "C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.Rdata")
cliente.frec <- c("Arturo", "Jack")
save(pedidos, cliente.frec, file = "C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.Rdata")
save.image(file = "C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/alldata.Rdata" )
saveRDS(pedidos, file = "C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.rds")
remove(pedidos)
load("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.RData")
attach("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.RData")
orders <- readRDS("C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.rds")
write.csv(pedidos,'C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos.csv', na="NA",row.names=FALSE)
write.csv(pedidos,'C:/Users/jair_/Desktop/Jair/UPC/CICLO 5/Data Science/TA/LAB 7/pedidos2.csv', na="NA")
